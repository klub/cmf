{
  "name": "emmett",
  "version": "3.1.1",
  "description": "A custom event emitter for Node.js and the browser.",
  "main": "emmett.js",
  "scripts": {
    "test": "gulp test",
    "build": "gulp build"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jacomyal/emmett"
  },
  "keywords": [
    "events",
    "emitter"
  ],
  "contributors": [
    {
      "name": "jacomyal",
      "url": "https://github.com/jacomyal"
    },
    {
      "name": "yomguithereal",
      "url": "https://github.com/Yomguithereal"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jacomyal/emmett/issues"
  },
  "homepage": "https://github.com/jacomyal/emmett",
  "devDependencies": {
    "gulp": "^3.8.9",
    "gulp-browserify": "^0.5.0",
    "gulp-gjslint": "^0.1.4",
    "gulp-header": "^1.2.2",
    "gulp-jshint": "^1.8.6",
    "gulp-mocha": "^1.1.1",
    "gulp-mocha-phantomjs": "^0.5.1",
    "gulp-rename": "^1.2.0",
    "gulp-uglify": "^1.0.1",
    "jshint-stylish": "^1.0.0"
  },
  "readme": "# Emmett\n\nA custom event emitter for Node.js and the browser.\n\nIts aim is to provide its user with a lot of event emitting sugar while remaining lightweight and fast.\n\n## Installation\n\nYou can install **Emmett** through npm:\n\n```bash\nnpm install --save emmett\n```\n\nOr you can just drop the [`emmett.min.js`](./emmett.min.js) file in your project (will work with many popular module systems).\n\n## Usage\n\n### Creating an emitter\n\n```js\nvar Emitter = require('emmett');\n\nvar emitter = new Emitter();\n```\n\n### Extending the emitter\n\n*Node.js*\n\n```js\nvar util = require('util'),\n    Emitter = require('emmett');\n\nfunction MyObject() {\n\tEmitter.call(this);\n}\n\nutil.inherits(MyObject, Emitter);\n```\n\n*ES6 class*\n\n```js\nimport Emitter from 'emmett';\n\nclass MyObject extends Emitter {\n\t/* ... */\n}\n```\n\n### Listening to events\n\n```js\n// Basic\nemitter.on('eventName', callback);\n\n// Once\nemitter.once('eventName', callback);\n\n// Using ES6 symbol as event name\nconst sym = Symbol();\nemitter.on(sym, callback);\n\n// Matching event names with a regex\nemitter.on(/^event/, callback);\n\n// Options\nemitter.on('eventName', callback, {scope: customScope, once: true});\n\n// Polymorphisms\nemitter.on(['event1', 'event2'], callback);\n\nemitter.on({\n\tevent1: callback1,\n\tevent2: callback2\n});\n\n// Listening to every events\nemitter.on(callback);\n```\n\n## Event data\n\nEvents are objects having the following keys:\n\n* **data**: the data attached to the event.\n* **type**: the event type.\n* **target**: the event emitter.\n\n```js\nemitter.on('myEvent', function(e) {\n\tconsole.log(e.data);\n});\n\nemitter.emit('myEvent', 'Hello World!');\n\n// Will print \"Hello World!\" in the console\n```\n\n## Removing listeners\n\n```js\n// Basic\nemitter.off('eventName', callback);\n\n// Removing every listeners attached to the given event\nemitter.off('eventName');\n\n// Removing the callback from any event\nemitter.off(callback);\n\n// Polymorphisms\nemitter.off(['event1', 'event2'], callback);\n\nemitter.off({\n\tevent1: callback1,\n\tevent2: callback2\n});\n\n// Removing every listeners\nemitter.unbindAll();\n```\n\n## Emitting\n\n```js\n// Basic\nemitter.emit('eventName');\n\n// With data\nemitter.emit('eventName', {hello: 'world'});\n\n// Polymorphisms\nemitter.emit(['event1', 'event2']);\nemitter.emit(['event1', 'event2'], {hello: 'world'});\n\nemitter.emit({\n\tevent1: 'hey',\n\tevent2: 'ho'\n});\n```\n\n## Retrieving listeners\n\n```js\n// Return every matching handlers for a given event name\nemitter.listeners('eventName');\n```\n\n## Disabling an emitter\n\nWhile disabled, emitting events won't produce nothing.\n\n```js\nemitter.disable();\nemitter.enable();\n```\n\n## Killing an emitter\n\nKilling an emitter will remove all its listeners and make it inoperant in the future.\n\n```js\nemitter.kill();\n```\n\n## Contribution\n\nDo not hesitate to contribute to the library. Be sure to add and pass any relevant unit test before submitting any code.\n\n```bash\n# Installing the dev version\ngit clone http://github.com/jacomyal/emmett\ncd emmett\n\n# Installing dependencies\nnpm install\n\n# Running unit tests\nnpm test\n\n# Build a minified version\nnpm build\n\n# Lint the code\ngulp lint\n```\n",
  "readmeFilename": "README.md",
  "_id": "emmett@3.1.1",
  "dist": {
    "shasum": "53392301a9dbba08bcf139e55eb8a773b594a9cc"
  },
  "_from": "emmett@^3.0.1",
  "_resolved": "https://registry.npmjs.org/emmett/-/emmett-3.1.1.tgz"
}
